{"body":"## Usage\r\n\r\n```\r\n$ gem install puppet-lint\r\n$ puppet-lint path/to/your/manifest.pp\r\n```\r\n\r\n## Things it tests\r\n### Spacing, Indentation & Whitespace\r\n\r\n * Must use two-space soft tabs.\r\n * Must not use literal tab characters.\r\n * Must not contain trailing white space.\r\n * Should not exceed an 80 character line width\r\n   * An exception has been made for `source => 'puppet://...'` lines as\r\n     splitting these over multiple lines decreases the readability of the\r\n     manifests.\r\n * Should align arrows (`=>`) within blocks of attributes.\r\n\r\n### Quoting\r\n\r\n * All strings that do not contain variables should be enclosed in single\r\n   quotes.\r\n   * An exception has been made for double quoted strings containing \\n or \\t.\r\n * All strings that contain variables must be enclosed in double quotes.\r\n * All variables should be enclosed in braces when interpolated in a string.\r\n * Variables standing by themselves should not be quoted.\r\n\r\n### Resources\r\n\r\n * All resource titles should be quoted.\r\n * If a resource declaration includes an `ensure` attribute, it should be the\r\n   first attribute specified.\r\n * Symbolic links should be declared by using an ensure value of `link` and\r\n   explicitly specifying a value for the `target` attribute.\r\n * File modes should be represented as a 4 digit string enclosed in single\r\n   quotes or use symbolic file modes.\r\n\r\n### Conditionals\r\n\r\n * You should not intermingle conditionals inside resource declarations (i.e.\r\n   selectors inside resources).\r\n * Case statements should have a default case.\r\n\r\n### Classes\r\n\r\n * Relationship declarations with the chaining syntax should only be used in\r\n   the 'left to right' direction.\r\n * Classes should not be defined inside a class.\r\n * Defines should not be defined inside a class.\r\n * Classes should not inherit between namespaces.\r\n * Required parameters in class & defined type definitions should be listed\r\n   before optional parameters.\r\n * When using top-scope variables, including facts, Puppet modules should\r\n   explicitly specify the empty namespace.\r\n\r\n## Reporting bugs or incorrect results\r\n\r\nIf you find a bug in puppet-lint or its results, please create an issue in the\r\n[repo issues tracker](https://github.com/rodjek/puppet-lint/issues/).  Bonus\r\npoints will be awarded if you also include a patch that fixes the issue.\r\n\r\n## Thank You\r\n\r\nMany thanks to the following people for contributing to puppet-lint\r\n\r\n * James Turnbull (@jamtur01)\r\n * Jan Vansteenkiste (@vStone)\r\n * Julian Simpson (@simpsonjulian)\r\n * S. Zachariah Sprackett (@zsprackett)\r\n\r\nAs well as the many people who have reported the issues they've had!\r\n\r\n## License\r\n\r\nCopyright (c) 2011 Tim Sharpe\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","name":"Puppet-lint","tagline":"Check that your Puppet manifest conform to the style guide","google":""}